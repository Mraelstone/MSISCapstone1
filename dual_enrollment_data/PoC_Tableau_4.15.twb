<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.20.0323.1703                               -->
<workbook original-version='18.1' source-build='2019.3.6 (20193.20.0323.1703)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Cleaned Data (dual(usecleaneddata))' inline='true' name='federated.0293qwq0pz1ri314xhh3q024lpxb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dual(usecleaneddata)' name='excel-direct.1ehwtv219reqg016x6dnz0sky3f6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevba/Desktop/MSIS Spring/KPMG Capstone Project/dual(usecleaneddata).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Income by Location' name='textscan.0la7v7l12rgs3a1gizrai0ydqhge'>
            <connection class='textscan' directory='C:/Users/kevba/Desktop/MSIS Spring/KPMG Capstone Project' filename='Income by Location.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Income by Location (2)' name='excel-direct.06u4zyx03sxcr119455gg1qmmwjx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevba/Desktop/MSIS Spring/KPMG Capstone Project/Income by Location.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Kentucky 2018 Income' name='excel-direct.1e1zwex1lfejuz10i1n750sr3h4r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevba/Desktop/MSIS Spring/KPMG Capstone Project/Kentucky 2018 Income.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Household income by county (KY)' name='excel-direct.07nk2tk1rk0iyi1914mso0jv07u3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevba/Desktop/MSIS Spring/KPMG Capstone Project/Household income by county (KY).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Avg. Population' name='excel-direct.1ak1a230epc11d16klkui1v08rsc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevba/Desktop/MSIS Spring/KPMG Capstone Project/Avg. Population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Cleaned Data].[State]' />
              <expression op='[Sheet1].[Geography]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Cleaned Data].[County]' />
                <expression op='[table-1].[County]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Cleaned Data].[State]' />
                  <expression op='[State Income].[Geography]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Cleaned Data].[County]' />
                    <expression op='[Income by Location].[Geography]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.1ehwtv219reqg016x6dnz0sky3f6' name='Cleaned Data' table='[&apos;Cleaned Data$&apos;]' type='table'>
                  <columns gridOrigin='A1:K481:no:A1:K481:0' header='yes' outcome='2'>
                    <column datatype='string' name='State' ordinal='0' />
                    <column datatype='string' name='County' ordinal='1' />
                    <column datatype='integer' name='Qualified Medicare Beneficiary Program Only Enrollees' ordinal='2' />
                    <column datatype='integer' name='Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees' ordinal='3' />
                    <column datatype='integer' name='Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees' ordinal='4' />
                    <column datatype='integer' name='Qualifying Disabled Working Individual Enrollees' ordinal='5' />
                    <column datatype='integer' name='Qualifying Individual Enrollees' ordinal='6' />
                    <column datatype='integer' name='Qualified Medicare Beneficiary Program Only Enrollees 1' ordinal='7' />
                    <column datatype='integer' name='Other Dual Full Medicaid Enrollees' ordinal='8' />
                    <column datatype='date' name='Date' ordinal='9' />
                    <column datatype='string' name='FIPS' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='excel-direct.06u4zyx03sxcr119455gg1qmmwjx' name='Income by Location' table='[&apos;Income by Location$&apos;]' type='table'>
                  <columns gridOrigin='A1:F482:no:A1:F482:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Year' ordinal='0' />
                    <column datatype='integer' name='Household Income by Race' ordinal='1' />
                    <column datatype='real' name='Household Income by Race Moe' ordinal='2' />
                    <column datatype='string' name='Geography' ordinal='3' />
                    <column datatype='string' name='ID Geography' ordinal='4' />
                    <column datatype='string' name='Slug Geography' ordinal='5' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.1e1zwex1lfejuz10i1n750sr3h4r' name='State Income' table='[&apos;State Income$&apos;]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Geography' ordinal='1' />
                  <column datatype='integer' name='Avg. Income' ordinal='2' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.07nk2tk1rk0iyi1914mso0jv07u3' name='table-1' table='[&apos;table-1$&apos;]' type='table'>
              <columns gridOrigin='A1:F123:no:A1:F123:0' header='yes' outcome='2'>
                <column datatype='string' name='County' ordinal='0' />
                <column datatype='integer' name='Per capitaincome' ordinal='1' />
                <column datatype='integer' name='Medianhouseholdincome' ordinal='2' />
                <column datatype='integer' name='Medianfamilyincome' ordinal='3' />
                <column datatype='integer' name='Population' ordinal='4' />
                <column datatype='integer' name='Number ofhouseholds' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1ak1a230epc11d16klkui1v08rsc' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='Geography' ordinal='1' />
              <column datatype='integer' name='Avg. Population' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Avg. Income]' value='[State Income].[Avg. Income]' />
          <map key='[Avg. Population]' value='[Sheet1].[Avg. Population]' />
          <map key='[County (table-1)]' value='[table-1].[County]' />
          <map key='[County]' value='[Cleaned Data].[County]' />
          <map key='[Date]' value='[Cleaned Data].[Date]' />
          <map key='[FIPS]' value='[Cleaned Data].[FIPS]' />
          <map key='[Geography (Sheet1)]' value='[Sheet1].[Geography]' />
          <map key='[Geography (State Income)]' value='[State Income].[Geography]' />
          <map key='[Geography]' value='[Income by Location].[Geography]' />
          <map key='[Household Income by Race Moe]' value='[Income by Location].[Household Income by Race Moe]' />
          <map key='[Household Income by Race]' value='[Income by Location].[Household Income by Race]' />
          <map key='[ID Geography]' value='[Income by Location].[ID Geography]' />
          <map key='[Medianfamilyincome]' value='[table-1].[Medianfamilyincome]' />
          <map key='[Medianhouseholdincome]' value='[table-1].[Medianhouseholdincome]' />
          <map key='[Number ofhouseholds]' value='[table-1].[Number ofhouseholds]' />
          <map key='[Other Dual Full Medicaid Enrollees]' value='[Cleaned Data].[Other Dual Full Medicaid Enrollees]' />
          <map key='[Per capitaincome]' value='[table-1].[Per capitaincome]' />
          <map key='[Population]' value='[table-1].[Population]' />
          <map key='[Qualified Medicare Beneficiary Program Only Enrollees 1]' value='[Cleaned Data].[Qualified Medicare Beneficiary Program Only Enrollees 1]' />
          <map key='[Qualified Medicare Beneficiary Program Only Enrollees]' value='[Cleaned Data].[Qualified Medicare Beneficiary Program Only Enrollees]' />
          <map key='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' value='[Cleaned Data].[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' />
          <map key='[Qualifying Disabled Working Individual Enrollees]' value='[Cleaned Data].[Qualifying Disabled Working Individual Enrollees]' />
          <map key='[Qualifying Individual Enrollees]' value='[Cleaned Data].[Qualifying Individual Enrollees]' />
          <map key='[Slug Geography]' value='[Income by Location].[Slug Geography]' />
          <map key='[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' value='[Cleaned Data].[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' />
          <map key='[State]' value='[Cleaned Data].[State]' />
          <map key='[Year (Sheet1)]' value='[Sheet1].[Year]' />
          <map key='[Year (State Income)]' value='[State Income].[Year]' />
          <map key='[Year]' value='[Income by Location].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualified Medicare Beneficiary Program Only Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualified Medicare Beneficiary Program Only Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualified Medicare Beneficiary Program Only Enrollees</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualifying Disabled Working Individual Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualifying Disabled Working Individual Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualifying Disabled Working Individual Enrollees</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualifying Individual Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualifying Individual Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualifying Individual Enrollees</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualified Medicare Beneficiary Program Only Enrollees 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualified Medicare Beneficiary Program Only Enrollees 1]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualified Medicare Beneficiary Program Only Enrollees 1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Dual Full Medicaid Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Other Dual Full Medicaid Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Other Dual Full Medicaid Enrollees</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K481:no:A1:K481:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household Income by Race</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Household Income by Race]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Household Income by Race</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household Income by Race Moe</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household Income by Race Moe]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Household Income by Race Moe</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Geography]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Geography</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ID Geography]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>ID Geography</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Slug Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Slug Geography]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Slug Geography</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F482:no:A1:F482:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (State Income)]</local-name>
            <parent-name>[State Income]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Geography (State Income)]</local-name>
            <parent-name>[State Income]</parent-name>
            <remote-alias>Geography</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg. Income]</local-name>
            <parent-name>[State Income]</parent-name>
            <remote-alias>Avg. Income</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[State Income]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County (table-1)]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per capitaincome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per capitaincome]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Per capitaincome</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medianhouseholdincome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medianhouseholdincome]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Medianhouseholdincome</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medianfamilyincome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medianfamilyincome]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Medianfamilyincome</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number ofhouseholds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number ofhouseholds]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Number ofhouseholds</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[table-1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F123:no:A1:F123:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Geography (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Geography</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg. Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Avg. Population</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KY State Income' datatype='integer' name='[Avg. Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Avg. Population]' role='measure' type='quantitative' />
      <column caption='Average Dual Enrollees' datatype='real' name='[Calculation_1205275890850934785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees])/COUNT([County])' />
      </column>
      <column caption='Average number of people per county' datatype='real' datatype-customized='true' name='[Calculation_1205275890882940931]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Population])' />
      </column>
      <column aggregation='None' datatype='string' name='[County (table-1)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Fips' datatype='string' name='[FIPS]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[Geography (State Income)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Household Income' datatype='integer' name='[Household Income by Race]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Medianhouseholdincome]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Per capitaincome]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='N' name='[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (State Income)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Avg. Income]' derivation='Avg' name='[avg:Avg. Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg. Population]' derivation='Avg' name='[avg:Avg. Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Household Income by Race]' derivation='Avg' name='[avg:Household Income by Race:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Medianhouseholdincome]' derivation='Avg' name='[avg:Medianhouseholdincome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg. Income]' derivation='None' name='[none:Avg. Income:ok]' pivot='key' type='ordinal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Medianhouseholdincome]' derivation='Sum' name='[sum:Medianhouseholdincome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per capitaincome]' derivation='Sum' name='[sum:Per capitaincome:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State, County'>
          <field>[State]</field>
          <field>[County]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.534314' measure-ordering='alphabetic' measure-percentage='0.384804' parameter-percentage='0.0808824' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:County:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mccracken&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Avg. Income:ok]' type='palette'>
            <map to='#f28e2b'>
              <bucket>50200</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Household Income by Race:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Medianhouseholdincome:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[sum:Per capitaincome:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[sum:Medianhouseholdincome:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Population:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='KY State Income Average' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='50200.0'>
        <calculation class='tableau' formula='50200.0' />
      </column>
    </datasource>
    <datasource caption='Cleaned Data (dual(usecleaneddata)) (2)' inline='true' name='federated.0293qwq0pz1ri314xhh3q024lpxb (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dual(usecleaneddata)' name='excel-direct.1ehwtv219reqg016x6dnz0sky3f6 (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dpvan/OneDrive/Documents/GitHub/MSISCapstone1/dual_enrollment_data/PoC_Tableau_4.15.twb Files/Data/KPMG Capstone Project/dual.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Income by Location' name='textscan.0la7v7l12rgs3a1gizrai0ydqhge (copy)'>
            <connection class='textscan' directory='C:/Users/dpvan/OneDrive/Documents/GitHub/MSISCapstone1/dual_enrollment_data/PoC_Tableau_4.15.twb Files/Data/KPMG Capstone Project' filename='Income by Location.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Income by Location (2)' name='excel-direct.06u4zyx03sxcr119455gg1qmmwjx (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dpvan/OneDrive/Documents/GitHub/MSISCapstone1/dual_enrollment_data/PoC_Tableau_4.15.twb Files/Data/KPMG Capstone Project/Income_by_Location.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Kentucky 2018 Income' name='excel-direct.1e1zwex1lfejuz10i1n750sr3h4r (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dpvan/OneDrive/Documents/GitHub/MSISCapstone1/dual_enrollment_data/PoC_Tableau_4.15.twb Files/Data/KPMG Capstone Project/Kentucky_2018_Income.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Household income by county (KY)' name='excel-direct.07nk2tk1rk0iyi1914mso0jv07u3 (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dpvan/OneDrive/Documents/GitHub/MSISCapstone1/dual_enrollment_data/PoC_Tableau_4.15.twb Files/Data/KPMG Capstone Project/Household_income_by_county_(KY).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Avg. Population' name='excel-direct.1ak1a230epc11d16klkui1v08rsc (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dpvan/OneDrive/Documents/GitHub/MSISCapstone1/dual_enrollment_data/PoC_Tableau_4.15.twb Files/Data/KPMG Capstone Project/Avg_Population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Cleaned Data].[State]' />
              <expression op='[Sheet1].[Geography]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Cleaned Data].[County]' />
                <expression op='[table-1].[County]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Cleaned Data].[State]' />
                  <expression op='[State Income].[Geography]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Cleaned Data].[County]' />
                    <expression op='[Income by Location].[Geography]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.1ehwtv219reqg016x6dnz0sky3f6 (copy)' name='Cleaned Data' table='[&apos;Cleaned Data$&apos;]' type='table'>
                  <columns gridOrigin='A1:K481:no:A1:K481:0' header='yes' outcome='2'>
                    <column datatype='string' name='State' ordinal='0' />
                    <column datatype='string' name='County' ordinal='1' />
                    <column datatype='integer' name='Qualified Medicare Beneficiary Program Only Enrollees' ordinal='2' />
                    <column datatype='integer' name='Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees' ordinal='3' />
                    <column datatype='integer' name='Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees' ordinal='4' />
                    <column datatype='integer' name='Qualifying Disabled Working Individual Enrollees' ordinal='5' />
                    <column datatype='integer' name='Qualifying Individual Enrollees' ordinal='6' />
                    <column datatype='integer' name='Qualified Medicare Beneficiary Program Only Enrollees 1' ordinal='7' />
                    <column datatype='integer' name='Other Dual Full Medicaid Enrollees' ordinal='8' />
                    <column datatype='date' name='Date' ordinal='9' />
                    <column datatype='string' name='FIPS' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='excel-direct.06u4zyx03sxcr119455gg1qmmwjx (copy)' name='Income by Location' table='[&apos;Income by Location$&apos;]' type='table'>
                  <columns gridOrigin='A1:F482:no:A1:F482:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Year' ordinal='0' />
                    <column datatype='integer' name='Household Income by Race' ordinal='1' />
                    <column datatype='real' name='Household Income by Race Moe' ordinal='2' />
                    <column datatype='string' name='Geography' ordinal='3' />
                    <column datatype='string' name='ID Geography' ordinal='4' />
                    <column datatype='string' name='Slug Geography' ordinal='5' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.1e1zwex1lfejuz10i1n750sr3h4r (copy)' name='State Income' table='[&apos;State Income$&apos;]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Geography' ordinal='1' />
                  <column datatype='integer' name='Avg. Income' ordinal='2' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.07nk2tk1rk0iyi1914mso0jv07u3 (copy)' name='table-1' table='[&apos;table-1$&apos;]' type='table'>
              <columns gridOrigin='A1:F123:no:A1:F123:0' header='yes' outcome='2'>
                <column datatype='string' name='County' ordinal='0' />
                <column datatype='integer' name='Per capitaincome' ordinal='1' />
                <column datatype='integer' name='Medianhouseholdincome' ordinal='2' />
                <column datatype='integer' name='Medianfamilyincome' ordinal='3' />
                <column datatype='integer' name='Population' ordinal='4' />
                <column datatype='integer' name='Number ofhouseholds' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1ak1a230epc11d16klkui1v08rsc (copy)' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='Geography' ordinal='1' />
              <column datatype='integer' name='Avg. Population' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Avg. Income]' value='[State Income].[Avg. Income]' />
          <map key='[Avg. Population]' value='[Sheet1].[Avg. Population]' />
          <map key='[County (table-1)]' value='[table-1].[County]' />
          <map key='[County]' value='[Cleaned Data].[County]' />
          <map key='[Date]' value='[Cleaned Data].[Date]' />
          <map key='[FIPS]' value='[Cleaned Data].[FIPS]' />
          <map key='[Geography (Sheet1)]' value='[Sheet1].[Geography]' />
          <map key='[Geography (State Income)]' value='[State Income].[Geography]' />
          <map key='[Geography]' value='[Income by Location].[Geography]' />
          <map key='[Household Income by Race Moe]' value='[Income by Location].[Household Income by Race Moe]' />
          <map key='[Household Income by Race]' value='[Income by Location].[Household Income by Race]' />
          <map key='[ID Geography]' value='[Income by Location].[ID Geography]' />
          <map key='[Medianfamilyincome]' value='[table-1].[Medianfamilyincome]' />
          <map key='[Medianhouseholdincome]' value='[table-1].[Medianhouseholdincome]' />
          <map key='[Number ofhouseholds]' value='[table-1].[Number ofhouseholds]' />
          <map key='[Other Dual Full Medicaid Enrollees]' value='[Cleaned Data].[Other Dual Full Medicaid Enrollees]' />
          <map key='[Per capitaincome]' value='[table-1].[Per capitaincome]' />
          <map key='[Population]' value='[table-1].[Population]' />
          <map key='[Qualified Medicare Beneficiary Program Only Enrollees 1]' value='[Cleaned Data].[Qualified Medicare Beneficiary Program Only Enrollees 1]' />
          <map key='[Qualified Medicare Beneficiary Program Only Enrollees]' value='[Cleaned Data].[Qualified Medicare Beneficiary Program Only Enrollees]' />
          <map key='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' value='[Cleaned Data].[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' />
          <map key='[Qualifying Disabled Working Individual Enrollees]' value='[Cleaned Data].[Qualifying Disabled Working Individual Enrollees]' />
          <map key='[Qualifying Individual Enrollees]' value='[Cleaned Data].[Qualifying Individual Enrollees]' />
          <map key='[Slug Geography]' value='[Income by Location].[Slug Geography]' />
          <map key='[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' value='[Cleaned Data].[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' />
          <map key='[State]' value='[Cleaned Data].[State]' />
          <map key='[Year (Sheet1)]' value='[Sheet1].[Year]' />
          <map key='[Year (State Income)]' value='[State Income].[Year]' />
          <map key='[Year]' value='[Income by Location].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualified Medicare Beneficiary Program Only Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualified Medicare Beneficiary Program Only Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualified Medicare Beneficiary Program Only Enrollees</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualifying Disabled Working Individual Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualifying Disabled Working Individual Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualifying Disabled Working Individual Enrollees</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualifying Individual Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualifying Individual Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualifying Individual Enrollees</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualified Medicare Beneficiary Program Only Enrollees 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qualified Medicare Beneficiary Program Only Enrollees 1]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Qualified Medicare Beneficiary Program Only Enrollees 1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Dual Full Medicaid Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Other Dual Full Medicaid Enrollees]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Other Dual Full Medicaid Enrollees</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K481:no:A1:K481:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household Income by Race</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Household Income by Race]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Household Income by Race</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household Income by Race Moe</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household Income by Race Moe]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Household Income by Race Moe</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Geography]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Geography</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ID Geography]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>ID Geography</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Slug Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Slug Geography]</local-name>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias>Slug Geography</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Income by Location]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F482:no:A1:F482:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (State Income)]</local-name>
            <parent-name>[State Income]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Geography (State Income)]</local-name>
            <parent-name>[State Income]</parent-name>
            <remote-alias>Geography</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg. Income]</local-name>
            <parent-name>[State Income]</parent-name>
            <remote-alias>Avg. Income</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[State Income]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County (table-1)]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per capitaincome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per capitaincome]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Per capitaincome</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medianhouseholdincome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medianhouseholdincome]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Medianhouseholdincome</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medianfamilyincome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medianfamilyincome]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Medianfamilyincome</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number ofhouseholds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number ofhouseholds]</local-name>
            <parent-name>[table-1]</parent-name>
            <remote-alias>Number ofhouseholds</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[table-1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F123:no:A1:F123:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Geography (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Geography</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg. Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Avg. Population</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KY State Income' datatype='integer' name='[Avg. Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Avg. Population]' role='measure' type='quantitative' />
      <column caption='Average Dual Enrollees' datatype='real' name='[Calculation_1205275890850934785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees])/COUNT([County])' />
      </column>
      <column caption='Average number of people per county' datatype='real' datatype-customized='true' name='[Calculation_1205275890882940931]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Population])' />
      </column>
      <column aggregation='None' datatype='string' name='[County (table-1)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Fips' datatype='string' name='[FIPS]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[Geography (State Income)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Household Income' datatype='integer' name='[Household Income by Race]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Medianhouseholdincome]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Per capitaincome]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='N' name='[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (State Income)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Avg. Income]' derivation='Attribute' name='[attr:Avg. Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg. Income]' derivation='Avg' name='[avg:Avg. Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg. Population]' derivation='Avg' name='[avg:Avg. Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Household Income by Race]' derivation='Avg' name='[avg:Household Income by Race:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Medianhouseholdincome]' derivation='Avg' name='[avg:Medianhouseholdincome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg. Income]' derivation='None' name='[none:Avg. Income:ok]' pivot='key' type='ordinal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Avg. Income]' derivation='Sum' name='[sum:Avg. Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Medianhouseholdincome]' derivation='Sum' name='[sum:Medianhouseholdincome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per capitaincome]' derivation='Sum' name='[sum:Per capitaincome:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:County:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State, County'>
          <field>[State]</field>
          <field>[County]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.531863' measure-ordering='alphabetic' measure-percentage='0.387255' parameter-percentage='0.0808824' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:County:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mccracken&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Avg. Income:ok]' type='palette'>
            <map to='#f28e2b'>
              <bucket>50200</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Household Income by Race:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Medianhouseholdincome:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[sum:Avg. Income:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[sum:Per capitaincome:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[sum:Medianhouseholdincome:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[attr:Avg. Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Avg. Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Avg. Population:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bottom 10 Dual Enrolles'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Counties with the Least Number of Dual Enrollees&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
            <column-instance column='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' derivation='Avg' name='[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]</rows>
        <cols>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</cols>
      </table>
      <simple-id uuid='{8B0A24B7-33BD-40A1-B0B3-4603CE137509}' />
    </worksheet>
    <worksheet name='County Income Relative to State Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County Income Relative to State Average (10 States with Most Dual Eligible Enrolles)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column caption='KY State Income' datatype='integer' name='[Avg. Income]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[Medianhouseholdincome]' role='measure' type='quantitative' />
            <column-instance column='[Avg. Income]' derivation='Avg' name='[avg:Avg. Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medianhouseholdincome]' derivation='Avg' name='[avg:Medianhouseholdincome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Medianhouseholdincome:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Income:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Medianhouseholdincome:qk]&quot;</bucket>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Income:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Daviess&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Fayette&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Franklin&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Jefferson&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Kenton&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Knox&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Laurel&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Pike&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Pulaski&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Warren&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</column>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='rows' value='#f1946d' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#f1946d' />
            <format attr='band-color' scope='rows' value='#f1946d' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[Multiple Values]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>County:&#9;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[Multiple Values]</rows>
        <cols>([federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk] / [federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{89F3260C-5B08-48EC-BE10-7DEB47670C50}' />
    </worksheet>
    <worksheet name='County Income Relative to State Bottom 10 '>
      <layout-options>
        <title>
          <formatted-text>
            <run>County Income Relative to State (Bottom 10 Dual Enrollee Counties)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column caption='KY State Income' datatype='integer' name='[Avg. Income]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[Medianhouseholdincome]' role='measure' type='quantitative' />
            <column-instance column='[Avg. Income]' derivation='Avg' name='[avg:Avg. Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medianhouseholdincome]' derivation='Avg' name='[avg:Medianhouseholdincome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Income:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Medianhouseholdincome:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Medianhouseholdincome:qk]&quot;</bucket>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Income:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Ballard&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Carlisle&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Crittenden&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Gallatin&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Hancock&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Hickman&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Lyon&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Robertson&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Spencer&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Trimble&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</column>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[Multiple Values]</rows>
        <cols>([federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk] / [federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{95B48D3B-C02F-4F3A-A6BA-CFEE89CD59FB}' />
    </worksheet>
    <worksheet name='County Income Relative to State Bottom 10  (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County Income Relative to State (Bottom 10 Dual Enrollee Counties)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata)) (2)' name='federated.0293qwq0pz1ri314xhh3q024lpxb (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KY State Income Average' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='50200.0'>
              <calculation class='tableau' formula='50200.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb (copy)'>
            <column caption='KY State Income' datatype='integer' name='[Avg. Income]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[Medianhouseholdincome]' role='measure' type='quantitative' />
            <column-instance column='[Avg. Income]' derivation='Avg' name='[avg:Avg. Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medianhouseholdincome]' derivation='Avg' name='[avg:Medianhouseholdincome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Medianhouseholdincome:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Medianhouseholdincome:qk]&quot;</bucket>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[avg:Avg. Income:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:County:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Ballard&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Carlisle&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Crittenden&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Gallatin&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Hancock&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Hickman&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Lyon&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Robertson&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Spencer&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;Trimble&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]</column>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]' value='98' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Multiple Values]</rows>
        <cols>([federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:County:nk] / [federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{683D6A1B-6C18-4C19-B7C5-02F7B4F09F20}' />
    </worksheet>
    <worksheet name='Dual Enrollees by County'>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column caption='Average Dual Enrollees' datatype='real' name='[Calculation_1205275890850934785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees])/COUNT([County])' />
            </column>
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1205275890850934785]' derivation='User' name='[usr:Calculation_1205275890850934785:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0293qwq0pz1ri314xhh3q024lpxb].[usr:Calculation_1205275890850934785:qk]' num-steps='7' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[usr:Calculation_1205275890850934785:qk]' />
              <lod column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:State:nk]' />
              <lod column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' />
              <geometry column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[Latitude (generated)]</rows>
        <cols>[federated.0293qwq0pz1ri314xhh3q024lpxb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F74331E7-03D0-4202-9DD4-901725284AA3}' />
    </worksheet>
    <worksheet name='Dual Enrollees by County (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata)) (2)' name='federated.0293qwq0pz1ri314xhh3q024lpxb (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb (copy)'>
            <column caption='Average Dual Enrollees' datatype='real' name='[Calculation_1205275890850934785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees])/COUNT([County])' />
            </column>
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1205275890850934785]' derivation='User' name='[usr:Calculation_1205275890850934785:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Exclusions (County,State)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:County:nk]' />
                <groupfilter function='level-members' level='[none:State:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:County:nk]' member='&quot;Jefferson&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Exclusions (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[usr:Calculation_1205275890850934785:qk]' num-steps='7' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[usr:Calculation_1205275890850934785:qk]' />
              <lod column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:State:nk]' />
              <lod column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:County:nk]' />
              <geometry column='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6DBDAF09-6212-46EC-9CB8-FCBCED911244}' />
    </worksheet>
    <worksheet name='Dual Enrollment by County and Quarter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dual Enrollment By County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
            <column-instance column='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' derivation='Avg' name='[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter function='member' level='[none:County:nk]' member='&quot;Jefferson&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[qr:Date:ok]'>
            <groupfilter function='level-members' level='[qr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[qr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]</rows>
        <cols>([federated.0293qwq0pz1ri314xhh3q024lpxb].[yr:Date:ok] / ([federated.0293qwq0pz1ri314xhh3q024lpxb].[qr:Date:ok] / [federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]))</cols>
      </table>
      <simple-id uuid='{1837BD65-76A9-446B-8226-0B2DDE441B1C}' />
    </worksheet>
    <worksheet name='Jefferson County Income Eligibe'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Jefferson County Low-Income Medicaid plus Medicare Eligible &#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>153 is the average number of low-income Medicaid plus Medicare eligible individuals</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='N' name='[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
            <column-instance column='[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' derivation='Avg' name='[avg:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees]' derivation='None' name='[none:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter function='member' level='[none:County:nk]' member='&quot;Jefferson&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='153.0' value-column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:&#9;</run>
                <run bold='true'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Quarter of Date:&#9;</run>
                <run bold='true'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[qr:Date:ok]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:qk]</rows>
        <cols>([federated.0293qwq0pz1ri314xhh3q024lpxb].[qr:Date:ok] / [federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk])</cols>
      </table>
      <simple-id uuid='{D8A06A48-9290-4954-B7A0-67494EC56E02}' />
    </worksheet>
    <worksheet name='Population Data Bottom 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column datatype='integer' name='[Avg. Population]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Avg. Population]' derivation='Avg' name='[avg:Avg. Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Population:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Population])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Ballard&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Carlisle&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Crittenden&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Gallatin&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Hancock&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Hickman&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Lyon&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Robertson&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Spencer&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Trimble&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[Multiple Values]</rows>
        <cols>([federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk] / [federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{D2A0EF07-7442-4B39-BBCD-15762C3F042F}' />
    </worksheet>
    <worksheet name='Population Data Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column datatype='integer' name='[Avg. Population]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Avg. Population]' derivation='Avg' name='[avg:Avg. Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Avg. Population:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Population])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Daviess&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Fayette&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Franklin&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Jefferson&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Kenton&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Knott&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Laurel&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Pike&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Pulaski&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Warren&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0293qwq0pz1ri314xhh3q024lpxb].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[Multiple Values]</rows>
        <cols>([federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk] / [federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{051E3CB6-7029-43EE-83C7-A67999F4EC91}' />
    </worksheet>
    <worksheet name='Top 10 Dual Enrollees'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Counties with Most Eligible Dual Enrollees&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned Data (dual(usecleaneddata))' name='federated.0293qwq0pz1ri314xhh3q024lpxb' />
          </datasources>
          <datasource-dependencies datasource='federated.0293qwq0pz1ri314xhh3q024lpxb'>
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' role='measure' type='quantitative' />
            <column-instance column='[Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees]' derivation='Avg' name='[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:qk]</rows>
        <cols>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</cols>
      </table>
      <simple-id uuid='{4EF99941-F1AB-4836-95D3-02B84A43DCAF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dual Enrollee Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KY State Income Average' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='50200.0'>
          <calculation class='tableau' formula='50200.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Dual Enrollees by County (2)' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='County Income Relative to State Bottom 10  (2)' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='10125' id='8' name='Dual Enrollees by County (2)' pane-specification-id='0' param='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[usr:Calculation_1205275890850934785:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7375' id='14' name='County Income Relative to State Bottom 10  (2)' pane-specification-id='1' param='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]' type='color' w='16000' x='83200' y='11125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='15' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='18500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Dual Enrollees by County (2)' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10125' id='8' name='Dual Enrollees by County (2)' pane-specification-id='0' param='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[usr:Calculation_1205275890850934785:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7500' id='15' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='County Income Relative to State Bottom 10  (2)' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7375' id='14' name='County Income Relative to State Bottom 10  (2)' pane-specification-id='1' param='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]' type='color' w='16000' x='83200' y='11125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FA3CE2DD-3A8A-4D04-A4E3-7468492DC7F0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Dual Enrollees by County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[usr:Calculation_1205275890850934785:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F056714-E413-4C7E-B304-F1A9A65695BE}' />
    </window>
    <window class='worksheet' name='Top 10 Dual Enrollees'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D28A6D3-A017-4E20-8459-43F0C853AB0F}' />
    </window>
    <window class='worksheet' name='Bottom 10 Dual Enrolles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63F86462-B428-4E35-8D1C-37F37DEA5156}' />
    </window>
    <window class='worksheet' name='County Income Relative to State Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[avg:Household Income by Race:qk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:Avg. Income:ok]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:Avg. Income:qk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[sum:Household Income by Race:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D69FF40D-47C5-47CD-A4BF-463D5A723D26}' />
    </window>
    <window class='dashboard' maximized='true' name='Dual Enrollee Dashboard'>
      <viewpoints>
        <viewpoint name='County Income Relative to State Bottom 10  (2)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Dual Enrollees by County (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{14717418-2D91-4766-9766-E1B9BED9CC42}' />
    </window>
    <window class='worksheet' name='County Income Relative to State Bottom 10 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{200F1482-0763-4116-B9FA-B74D6846AF6C}' />
    </window>
    <window class='worksheet' name='County Income Relative to State Bottom 10  (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[:Measure Names]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2F39506-03A5-4A38-B63C-93B4BD05847E}' />
    </window>
    <window class='worksheet' name='Population Data Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[usr:Calculation_1205275890882940931:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D8707AA-F522-4CD3-845E-43454DDDD7FE}' />
    </window>
    <window class='worksheet' name='Population Data Bottom 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[:Measure Names]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[usr:Calculation_1205275890882940931:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CF79451-E38B-42F7-BF5B-62A01844E858}' />
    </window>
    <window class='worksheet' name='Dual Enrollment by County and Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[qr:Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:Qualified Medicare Beneficiary Program plus Full Medicaid Enrollees:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[qr:Date:ok]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0C17BA0-52A6-4252-AA77-9DBC5C45446C}' />
    </window>
    <window class='worksheet' name='Jefferson County Income Eligibe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:County:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[none:Specified Low-Income Medicare Beneficiary plus Full Medicaid Enrollees:nk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FEE6536-0A06-4905-8FAE-EC2B7BEBE856}' />
    </window>
    <window class='worksheet' hidden='true' name='Dual Enrollees by County (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[usr:Calculation_1205275890850934785:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:County:nk]</field>
                  <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[none:State:nk]</field>
                  <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Geometry (generated)]</field>
                  <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Latitude (generated)]</field>
                  <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[Longitude (generated)]</field>
                  <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[usr:Calculation_1205275890850934785:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Jefferson&quot;</value>
                <value>&quot;KY&quot;</value>
                <value>&quot;POLYGON((-85.938 37.9985,-85.9484 38.0068,-85.9224 38.0287,-85.9062 38.0862,-85.9006 38.1784,-85.8397 38.2398,-85.8294 38.2768,-85.7916 38.2886,-85.7413 38.2683,-85.6836 38.2955,-85.6536 38.3271,-85.6384 38.3805,-85.4671 38.2854,-85.4051 38.2636,-85.424 38.1475,-85.429 38.1182,-85.5567 38.0739,-85.7125 38.0872,-85.8826 38.0407,-85.938 37.9985))&quot;</value>
                <value>38.194400000000002</value>
                <value>-85.652600000000007</value>
                <value>8347.25</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[usr:Calculation_1205275890850934785:qk]</field>
            <field>[federated.0293qwq0pz1ri314xhh3q024lpxb (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AE41D56-4F06-4124-961F-F7A34FE1C01C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bottom 10 Dual Enrolles' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='County Income Relative to State Average' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='County Income Relative to State Bottom 10 ' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='County Income Relative to State Bottom 10  (2)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dual Enrollee Dashboard' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dual Enrollees by County' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dual Enrollment by County and Quarter' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Jefferson County Income Eligibe' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Population Data Bottom 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29+W8kWZ7Y94mIvO+LZJJM3meRxarurp6ent3Z2d3Z8a7lXQOyDUuGIQgy
      YEiA4V8MGIbhXzyArX/BtmxYgCDAkixYml1JlmfVOz0z27PT09NdxSJZvK/ilWTe9xUZ8fxD
      VvGoYiavLLJ7GB+gAGbly/eJiMxvxIsX7/ueJIQQGBjcU+S73gADg7vECACDe40RAAZfa4rZ
      OP/2X/8ZS1sHlyof393gMFO6dP2m626YgcG7Rmgq//B//wd86/v/IbKoc7CxwI9//pQf/Mlf
      J7e/zujMB8x++Uvkeo3d/T36H36H+f/3H7JZC/LHf/BdugYnkVKb2CNTdLkt5zqMK4DB15Z6
      LYfJPcjHTx4zPhDmn//p/8fv/953+L//2T/jxfNnVHX44lef8/TXv+bRtz/iZz/+CWOjY/zW
      9/99xiMePvmLn/OXv/wSt635ed4IAIOvLYrZTSm9xfrOPgeH8Vf/2+i01NQK+zub5Mo6NneA
      gYE+LLKOx+OiUq3i7BiBo1kq9m7s5uY/c8noBjX4OpOKbvFvfvwp4x/+Ln328nETqB5b4ZeL
      B4S7QgRcDmY+mOHLz5/zeHqAf/Ev/xXf+5P/jNVP/wn2h3+N70x0N63/VgKgWq1iMplQFOVd
      q96iVCrhcDgM7z3z5g/X+Mf/9hn/5d/+T7EoUtPP30oTqF6vo+v6G/8rSMX2mZ9fIFOovDN3
      rVYDBOn4AfMLLyiU1eP3MskUGhrxeAKAZDyOdonTQSG2ReKCjoaG9yz5VIzns0/56uksh4ns
      yXakkmhvHh4gur9LRdUaL+oFtveSF27beV6EIB7dYX5+gXS+fOat1N42ORW2X26f+X9dq5BM
      5hplkqlredPJFDpQKWTJlaoX1tGM1P4euVr90l4Ad3iM/+q/+BtYFAmtXiaTPf8Lu7teoHqV
      le0YHz15SKmssrO9Tj5fJhDuw2+H1c2XdPUOoahZ4ukCJrubkUgnqysrWDwhAjZ4GY0zNDpJ
      KZ8km0gyOPkQ6zkXmVoxzdpumiePJ1CrVfb2ouRLGiGvk0L6iJ///As++PBDlmd/RdfIDNOj
      PayubuDv6sMtl9lP5JHMNiaH+9haXyW2v0nkyQA7G2vkajIPxvpZW9+kVq0xPDmNy3r+YXUH
      OpmixELaRdhvYXdnl2JNJ+Sxoat5Fld3EULHapExOwPoxTRHyQwOt4+xXhf5QoVCOsbGziF9
      w2ME3PZLHep0dIvDkoXpqUlKlRq51BHbu4d0RgYRxTy6Dvl8nnqlwNLaJnZPCJec4vOnUT7+
      7reR6irFTJyXBwl02cz05CjNz6knRPf38QQDFFMxspYO8rEdErkqY5OTHO6sUyrV6OofwSGV
      Wd/ep29olOzhDkVNYWJ8jMTBFolcDY8kcAY72dvdoycSQb6M/BSaWuDoqI7P62B/b5/eSC8H
      +/t4XNY7vAlWrHR6FL788hk1XSKZyTM5NUV0b4vV1Q3GHkyz/3KDdDJOz8AoxVyKnc1Vgn2j
      9HcHWd8+YHpqgo21VTZXFvH3DGBpsjeFVIJATx+KYsJmErxY2WJwoI9ELIbDH2Kgf5ChgQi9
      vf08nBpna2WVgYlpYvvb5DNx/D3DVEs5srEdhLOLscFeqvkEGdXKgA829pLkVZkHEz283Ixd
      bv+1CgsrOwwNREjGYtRrBXSzD5tZpzMyQiF9BJLM4MgEFGJkKzogWN3YYXr6Advrq5c+1AeJ
      LMN9XWyvL7FzkMRqsyNLsLi0dKacbLJgMyusL7/AEwozODhKOOghdhSjmEvhCPVir5QoXtJb
      KWSYn5tjeW0LAdjsdtRCgvXdGOlckQfTo0R3DlhZf8n0w4eYS4eUrR30B21sbK6xn9KYmhzD
      JGs8//UXSDb3lX/8b1JMHZIpFjlK5lhbf3l3ASCEoGdwnG99+B5ry4vIsoIkgSTJVItZXiws
      IFudSIoJi9mMLEnIkgSvzj255BELC0s4PT5c/k46/W6kJgfH4fWRjR+h6zp1TaM70o/9+Cwt
      IdARQiBJoOs6aqXI4sI8umJDkmSsFguyJKHrGrKioGkaQgj2ttbYOMzjsytYLVZkkwlJnNOW
      aUKkbwCr+eSSZbZYkBUzFrOCJEkgyZgUCV0XyK++qUImwfzCC2wu76U9nV4He0cZhoaHKORy
      LCwsMTY5hddpPVNue/kF3t4Rejp9gIwQjf1sHKbGcVBkicveNNpcPmYePWJybAiJKutbCaYm
      x5HRMZstKIqMBMhNftXS8f+b6O/tJJMrXNrdjOGxUZ7/6nM6eiIAKD/84Q9/eMM6L0RVVRRF
      OXsTLDR2NtfZj8YYHn/A0e4G6UyevsExers7yGZzuH0B/F43docLRYLunl72Nlcp1hWGIl3k
      imUCwQ7cDhsul+tcd6VSweUNINdybO3sY3N5sdusuByN5oPD5UGrZMlWBOEOLxvbUSYmx8hn
      MjjdPoJ+L1a7C7MMwc5u4nsbFFWJ7r4hXCaNmpDp6urEYrbgdNiQJDNOp5VKpYLNZjt3myST
      DbfdDLIZl6PxI3Q4nSgmK067GbvdiSJLeJ12trd3cAZ76PK7QDbT3xMikyvhDwTxuN6++TvP
      6/QGKMT32I0m6O0fwO8ys7N/hNvrw+/1YHU09q8jFGB7axuLw0VnRw/FzD6ayYHTbsXldGK2
      ObCaZGwu11tt52b763C5kACzzYWs5kgVawSCHbjs1lffmUx3h5fVtU3cnQNomQMSRZ2x0TEU
      NcvOQYJAIEiguxdRSuNweVFOBUyr43ya3e0t0sUyHV1hovt7jE+M4XNZbqcXqFgsUqlUWvYC
      pVIpAoHAO3E7nc6212t4v5leITQSyQwdoSBwizfBHo8Hs9nc9H2fz/fO3O+ybsP7zfP6/cHj
      v40nwQb3GiMADO41RgAY3GuMADC413xj8gFEvYK28/mly8vhGWRH8OKCF3nVCtruVbyPkB3t
      6c2q7/4a1Ms9dpI8EZTQaJu8X4B6uaQSyRtBCbbHqyU3ENndyxU2OzD1fXRj5zcnAMoZyn/6
      X1+6vP2v/6/IQ7/TBm/qat7/+B8gD/z2jb0A1U//Z/TkxqXKmt//Wyi/99+3x/uT/wk9tXU5
      7wd/G+V3/7u2eNWFf4H69B9dqqzkH8T1d/71jZ1GE8jgXmMEgMG9xggAg3uNEQAG95pr3wTv
      ba2RzBVxeDsYCln4YnEPr8fFxHgvR9EKHV44zEN/d/vH9xgYtItrB0Dv4CjdmsqXT+dwlmVC
      /cMMBJwoUpFUIsvhQYKHHzxp57YaGLSdawdAvZxndm4Bk6sDf38XajzF06+WePTBBC/XFuh5
      MIVVkdE0DU3TqNfrjTHu10TUz0+Ja4am61CvH7uvi35Vr9YeL8BVxunquk79Dryird7L51Ig
      RFu81w6ATKHMk4++za8//4JMzkFnT4R0/BBNCAbHH2OuxzhMFwn7nSiKgslkwmS6/mMH/Yqf
      VWT5OBH/pt6rZLMqSnu8AJLEpRNA5Dbt71W9Uhu9dekKt6SS1BbvtT9pUeDFiyUmHr2P1y6z
      urJM7+g0bquN/kEHHncvyXT+2htmYHAbXDsAvMEuZoJdx68nph4e/+3xNMb9BwN3Mz7cwOCy
      GN2gBvcaIwAM7jVGABjca4wAMLjXGAFgcK8xAsDgXmMEgMG9xggAg3uNEQAG9xojAAzuNdcO
      gLpaJZvNotYbMwgXCzmqah0hdFRVQwidWk29uCIDgzvk2mOB4keHVFWNF8vrjHS5OChBJZfl
      yYfjrC7n8NhySN4++jovP423gcFtc+0ACAX8zC2u4PIG2E2mePLkW2wtzZGrqOysLxIeG+b9
      Dq+RD3ADjHyAloXvNh/AZHfzaGaKL79awGxV0IRA03VMskRkYJhyMYcmBIosH4/ZvskieeIa
      +QCv1yS4iVe+Rj5AO7xw9XyAu/BKbfReNR+gHd5rB8DG8gIlVcfp9TPa6+XLL7/CanUyYrPi
      9HgYDrjZ3DlkfPBkicobXQGu8ZnXvm+i9zoY3qtz7QAYfTBz5vXH3zrJDRgZdQMwbuTDG3zN
      MbpBDe41RgAY3GuMADC41xgBYHCvMQLA4F5jBIDBvcYIAIN7jREABvcaIwAM7jVGABjca4wA
      MLjXXDsANLXM4osF0vkyQi0xNzfHi+U1NF0llysjtBqpjDE5rsHXm2sPhotGY4xOTPLVr37N
      WI8Lb/8U/V4FyLKznUMRMbpGZi6sx8DgLrn+CjF9/bxce4Er1IVsNZF8+YKYJvHe435ers7R
      MzVFwGU1EmJugJEQ07Lw3SbEbLx4hhLs52E4hFZX+aCnn7WFZ+QrdfrHpqnmY5TrA9hNirFA
      xjUxFshoJb7jBTLKqoaIH7BSKNDhMbF7mMRs9eBzOCiHZDoDAXYP4gz3h6+9cQYG75prB8DM
      +9868zrYFTn+u7fXAcBwv5EQb/D1xugGNbjXGAFgcK8xAsDgXmMEgMG9xggAg3uNEQAG9xoj
      AAzuNS2fA1RLWX7x2V8R6u6no3eQ7oDztrbLwOBWaHkF+NE/+UfIUp2llUX+3a8Wb2ubDAxu
      jZYBMDo0wOeff8HPfvGU6dG+29omA4Nbo2UTyBnoYmL6fUZ1HYf5tjbJwOD2aBkAvUPjeLsG
      2J79GRvRLA8GTwa27W+vEs+WEYqNiV4fc+u7mC0O3p/pY2uzSMirkqo5GOoNvvOdMDC4Li2b
      QMvPf8WPfvQjfjG7hsN6NlbCfSM8mn5AJZ9haXOHJx8+wW2qkatUKebzrL1M0N9tTA9t8PXm
      /CuAECzNf4Vq8vL48WMA+nrP/pirhTRPF9Z49METVhfnMEkSJlmmrgv2ttbpHBlGliQjIeYG
      GAkxLQu/24QYm82BU5w0/M2ms6twbL484OPf+hiTJDEQ8rCfLFCuQ5/dxsSj97FKGWLZIl0+
      p5EQc02MhJhW4neZECNJDI1P8dWnf8Y//fMvcMkq3/1P/i7hoOe4yMNHj47/7hgYByASbPxf
      Y4EMIxHG4OtPy9CZX9niu9/9Hfo8VZYS2dvaJgODW6PpNSeTjPP9P/oTvvPRI9b3y/z+h+O3
      uV0GBrdC0ytAJrHPJz/9JRVNMPbgPTwO621ul4HBrdA0AAbHH/O3+kbZWlvkR//PP6cku/iP
      fvdRs+IGBt9ImgbA3Oef8Iu5bcYePOTv/bc/JOAxBsIZ/ObRNAAefvsPmPmOzO2u/GpgcLs0
      DQBZbn+qQKVWp1RRL10+4LG3fRsMDE5zsycXV+TTZ9v8b3/65aXKypLEv/z7f/Mdb5HBfcfI
      CDO41xgBYHCvMQLA4F5z7QAQQhCPxdDBWCDD4BvLtW+CE9EdFlf3+a3OTvJ7G8YCGQbfSK4d
      AB09A3QmX53hrd4LF8jQNA2hX2G8N6Bp2vHf4tTfl0EXAk3T0HX9TD1X5creV76beuGK4/Lb
      tL9X97Zzf68ipi3etnSDejq6L1wgQ5blxkDzK3AmgUa+6mcbn3/979pc2Su1x3tFJNq0v1f2
      tm9/r/TxNn2/1w6Ag50NUtkMK8trdPns7B+1XiDjOht6+mGcfpVkCRpfjCzLSJJ0o4d6V/ZK
      7fE26rp8Ygq/AV6uOO6gHd5rB0BP/wg9/SPHrzvCxgIZBt88jG5Qg3uNEQAG9xojAAzuNUYA
      GNxrjAAwuNcYAWBwrzECwOBeYwSAwb3GCACDe40RAAb3GiMADO411w4AtVJk4cUyGqCrFRbm
      ZtncjSJEhdhRlno5x0Es08ZNNTBoP9cOgEKxhFouowMrLxaIjE9TTOxTqpWIHWVYeLGM1+dq
      46YaGLSfa48G9Qc7ODw4AqBQF/hsZjI2K8Vane2V5/Q+nMFpMZ1ZIEO/UuKCOLPwgbFARmuM
      BTKuR1sSYgI2E7FchWypQqfVzODEYyjHSBa6Cbpsx4sYyIpycWXHSGcWPjAWyGiNsUDG9bhR
      Qky5VmVleY3JyRk215YJ9Y1gNzvoiZjxecLEUkVw2a69ce2iqtZ5vn506fITfUG8X4PtNnj3
      3DAh5uT1+IOHx38HAo2p1MOdX48p1XPFKn//H//lpcv/j3/nd/lgvPsdbpHB14VbnRrxvlEo
      1/hXf7V66fK//94g4aDRcXCbGAHwDilWavzTv1i4dPkH/aG2BcD/8H/8BQeJy83L9IffGuE/
      /0F7prD5vz6ZJ52vXKrse6Nd/PZM/8UF3yFGAPyGkitUL/1DvMqM3Rfx2dwO+5cMPLvV1LYA
      +D//zTP+7Bcrlyrb2+Hmf/lv/hgwngQb3HOMADC41xgBYHCvMQLA4F5jBIDBvcYIAIN7jREA
      BvcaIwAM7jVteRBWjC7zi40SvSE3E2MdLC/mCLlLFE0djESC7VAYGLwT2nIFyOZVPE4Fq82O
      LEHiYIf9rM5wbxBd19GvuDCGgcFt0ZYrQM/4DN1CsDz3lGzZhs3hoF6rIThZF+BOE2LE1eL8
      dJLFTRJiNP1q891r+tnkjpskxIjLz/CPEPq1vW8mxFzho8fbfHo7Li8+mxBzpdWHBMfetgRA
      bH+bg0SWShVGrGZ8oS7CgTqrWwdMDvcgvUpeuLOEGK7i5UySxU0SYhT5il75bHLHTRJipCss
      NiFJ8rW9bybEXCXkX2/za26SECNdZZEMiWNvWwKgs3eQzt6T15MPGgtj+NpRuYHBO8ToBTK4
      1xgBYHCvMQLA4F5jBIDBvcYIAIN7jREABvcaIwAM7jVtCQAhBMVCjqpaRwgdVdUQQqdWa1+y
      tYHBu6AtD8LiL1fZL0Ell+XJh+OsLufw2HLg7aO/01gt3uDrS1uuADvJHO9NTdDltZGrqOys
      L5KoWujrMH78Bl9v2hIAJiQ0IdB0HZMsERkYRi3m0K4yqsrA4A5oSwBMjPTx5ZdfUdCseGxW
      nB4P02O9bO4ctqN6A4N3RlvuAey+Lj7+Vtfx65FRNwDjgXbUbmDw7njnUyO+XiADwGpW8Lsv
      N+24LDUG1orXzShJRnJ2vFVOCIEknTMI12Q5U9dlvQBmk3zivqpXaY9XkiQkewDJmbuUV7Kc
      nVPU47Lir1zO7bCZz/EW3ij1ujl71i1ZnGdee102StXL9f45rG94ra5zjvX5Xtl+9uzqsJkv
      fay9TtuJV4h331AvFotYLBbMZvO57zf9MdEIIFmWm77f6rMAmUwGn+/8gdkXfVbTNJQmOQzf
      VC/Q8li38rb67DfV+7WYHLfVFypfkOjQ6rM38V70vuH9zfDeeQAU0nE2d6MAdHT3091xNprP
      3wmdpYUlxqamMR3HhyB5uM9+LAVAZHCMgMfe1KvXKywtraIJsLn8jA/3vVXmvOBbWXrB0NgD
      LCdi8ukYW7uNG/7OngHCoebdv5paZnl5reF1+xkfupx3d30Jd+8oPvvJVbRSzLC2sYMAvKEw
      Az2dTb1CCHY2VsiWakiSiYnpKSxvaM7zpg62KFs76D01bXu9WmJ1bZ26DnZ3gLGhSAuvzsuN
      VXJX9JYzRxzkYaTv5N5S11TWV1eoqDomq5OJiZHLeWUzE1MPzveKW6BQKIharXbue7PPngpN
      19tg0cWzp8/Em1Wl0+lzSyc358V2utoGrxDPZ58J9Q1xM29ic168bJN3Y35WZKvapbyaWhLP
      55ba4j3cXhJ7yeKlvPVaUTyfX26LNx/fFWs7sct5qwUxt7ByYZ13fgVwKRpfzS1gkxtXgFZn
      z0p6n18t7eN3WYlGD3G5A3z0W9/i9TlRUos8X5hHQSIyOILf3fwKYPcHmZ39NbmgB5vL3/Is
      hprn089mCQa9HB1GcbncTD35GK+1cUpxKhpPZ+exmyQ6evoJB5vvg90X4PnzL8kG3NjcfsYG
      W3jR+auf/xSXL0QydojN5WJw/D26Aw4AHC4r88+e4XFY8IbC9He/fbP+Gkk2kU0cMD+vIskm
      xh+8fUY8zZeff4bF4SGfjqObnfQOjDDc26jf4XTy1eJzUl4Xdk+A0YHepvVIsolMfJ/5+caZ
      ePzBZEvv/LMvEIqNejlDqqzQG+njwWhjDQGLw8nu/DzlzCFmq4ux8aHmXsVMOrbHvF5FVsyM
      TZ7vvfPBcH2jE1jQ0IWM19N6dRQhINDRzfTUFF2hDnq8VgqnOhxGxseRdA1kCx5n6x4Bm6eT
      vk4PmqY3vYk6ZcblCzE1PUV3VycT/SGO0ieLT0SGx7DJAl1I+DzuljXZvZ1EOtyX9ILV4eHB
      1BTDvWEGxkZIxxLH73X0DOBzmNB0gc97wVN3ycTY6CCapmF3+zBf0LRWzDYmHkzxcLSPjsgI
      hUzy+D2nP0xPwI2u6fi8rfdBks2MjTS8Drf3Qq8smRgen2Rq+gGdnWHqpZNeMLPdy1CkA03X
      cfu8LX+8De/Aq/1t4W3LtekCWjWB5mefilpdF2o5LeYWNi6oSRcHO5tifn5BHCYyIpNOC/3U
      e7NPn4q6rotS+qVY3IgLIZpfItMvF8VmrCh0XRNPnz67cB+Sh3tifn5e7BzERDGbFqdbHvPP
      n4mKqgm1nBPPF1dbelMvF8VWvHRpby4VE/Pz82Jje0/USjmRL6vH7229eC6SJVVo9Yp4NrvQ
      0qupZTH7/IXQhRCrs1+JXL21t5zPiBcL82J5bUuotYrI5k6aPLGdVbETywldr4unz5619NZr
      JTE7t3jszV/gVStFsfRiQbxYWhGVmioy2dzxe4XEvljeigpd18Xzr54JtZW3WhTP55eELoRY
      aeG98yZQwOtk7vkz0FRCfeMty6rlAkeJDIrFhsftxG45u/kuu8Lz2Vm0apnB6Sct63IGOlmc
      XyCzZ0KxeVpvZL3KXjSGkM14vR4cjrOrXwY8DubnZpF0lY5I631wBjpYmp8nvWtCsV00Vkrn
      YP+Auibh8fkw252c7kj2Bn2sLjzHIgucwZ6WNUmyGb2aZXZ2lnJVMHTBtT8a3aem1uns9KKY
      rJy+sLm8fjaWlkjsmTDZW18BZMWMXsnwfHaWchWGL/DGjw4oV1X8HSEsJgXrKbHV5SG7vsDz
      dJS6Ym052Y1sslAvp4+9I028d/ocoFIuoesa5UoNALvDhcPeamlVQbVcZn9nk9XdFD/4/veO
      e4HKpRJaXaWqNiY8crm9WC2mc/uJ67UKqiYolUoAKGYrvguaX2qtwtHBLs8Wt/jDP/wB1lfi
      UqmEJDRKr/fB6cZhs1zKazJbL2z2afUa8aMos8/m+ej7f0TA0TiG1VIZXRaUimUALDYHbqe9
      Sb+4TqlUoVYpo4nGPEBevx+lRXNE1+qkk3Hmnj1l+IPvMdDR+CFqtQqVuqBSfrUPFitet6tt
      XqHrZDNJluZn8fQ9ZHq4sVytrqtUyiqVShlBI7B8Pg/ZG3rv/ApQV1XK5caXaLI2v2kFqJXz
      rG/u0dM3xB+NT7/xroRaq74KJgmb00PzUJIQev3Ya75o5rh6hZXVDTq7I/zJXxt9syrqtdqp
      fXC0rErXtTPe1tcAjY3VVZzBMH/4x3/81qRTWv3k2EmnnkCfj6BSKVPXQZIUPD7efLh6hp2t
      dSSbl+/9e/8B8hvlxKl9sFx0GylOeWUFj2jtPdzbpqiZePLbf4D5zC9WQgidSrmMDihmvfXk
      XZf03ulNsM3u4CB6RCQSIdIb4mC39eA5i81N0GNncX6WhaW1MwfA7rBxFEsTiUTo6bCxu5du
      Wo/JYqV4uIu9I0IkEiEVu2DQnslKT6ePteUFns4touknZofdwd5hjEgkQm93F9H93RZeG8XD
      XRydl/Si0NPTxf7mCl9+NUtJPZn+z+qwE9+JEopEiPR2cxQ9aFGPjNUM+aJOJBKBQobSBTMJ
      dvd0k4y+5Ndffkm6cDI3nmKxUUwd4PCHiUR6ScaiLb0WsyBfEg1vPkPpgvZGR7ibSjbGV1/+
      msPkyQ2wLJvQylmE1UMkEqGQTNB8ok0Zi0mnUIZIJILIZyg38d7pFSAdP2BjY4OaqqLVVXqG
      JpuWVctZ/vzf/bzR/ejx8HDqbFv7cG+bjc11avUqdVVldPpxi7ryrKxvQFbFowhsnhYzWNcr
      /PjPP6Fv/DEuj4dHM9NnTiTpWGMf1JqKXlfpGX7Q0ru6voGUVXErAps31NyLzmef/Bh71zAh
      r5uOsUc4T7Ugi5kEa5sbpOo1TLqGv6vVcqM6GyvLbOylKZcz1IWJ7hYN6Ke//JSyEmCoK4Dk
      7SdwaoyNWs6xsrqB4i3htjR6tS7ybu5nKZfSaJjobnHKXZ37gt2MzuOxHpy6k+5TXeK6VmV1
      eZU8dpJRB7LV1eLHq7O+ssx2NE+pmELDTE8Tr/LDH/7why32oC2oqtqYK/ON8R52p5twyEcu
      X0QxmXC43Lgc53dfKiYr4a4g2WSco1gcIVvwej28flDs8vgIeBwUSmUUxYTH68dmMVGpVLDZ
      ztapmK309PVSLeQRSChmK0F/k8aIrNDTHaaYS3F4FEPVJfw+7/FgPbvTTVfQR75QRDEp2F1e
      XHZrc2+kl8prr6mFF4lwTw9qOU80ekixWsfv92N61R6x2Bz0hDso5PLIJgWLzYnP7TzXCxKB
      ji6siqCqaphkmUBHR9O2eEe4G1mrsn8QJVco4/X5sZiV433o7ulGLeXRJBMms5mg39vUG+zs
      wqLo1FQNRVZaev2hLmyKTjR6QCqbx+3xYX81YE6STXT19CDqFep1gclkIhgKUG3m7QifeBWZ
      QOh8753fA2zv7GOXBZ7ePpLJfPOHSJKExx/C4w8xPjlJuVx5q0m3dxBHFtAb8ZLMVvG5mj8L
      yOxvoVtdmIRCpZAB3h6S8EqMw+VlbNzL6NgE5XKZN0dnvNzbR1Ekunt6OUymCAeaPwtIH2yB
      1YkJM5VCuoUXLDYnw6PjDI+MUa2U3/oCD3Z2kIWCK9xLOhqDnuYPwvR6lVS+jNAEDpNOHTh/
      aCKYzDb6h0boHxpGrVbR3xiqkD7aQ1FAsoco52Mt90FXK2QKFfS6wGGqtfTKione/kF6+wep
      qzXqbzTTSpk4mtlEPSeDKLa8B9DUMpliFV0V2Ft47/xBmM8foKu3i621TcyWZgjZw9QAABCW
      SURBVIfmLK9nm34TfzBAZ4eLjZdHWC2tZ2Z2B4N4PX4KyX1UcblZnCVJwnzODMhBf4BwZ4j1
      9S0s1la9WOAOBPF4AuQTe6iXPf9IEorJ9Na4KF8oQGdvF3tra8im1l5ZseIPBLCbNZKFyiW/
      eAlZUVDeuAt2egJ4Qz0Uo5vUL9gHWbHi9/uxmeqkCtVL/+Dkc1oMNqcblzOApCcpq61vJhTT
      a69Kutjce4fdoAJN0zmtl2X5wtGfDXTWV9cZGht/dVYUaJp2Zl57WVGQJenc7rk3F+2QJBlF
      udxXs7m+Rt/gyPHY/Yb37X1otze6vYEzPIDH9mradk1DP+WVZBmliVcIcZyT8ao0iqK8dSU7
      j0xsl4o5SNjvaLkP7fZWcgmOCjDQ07hPErreWPPh2NsIzvO6Qa/ivdMmUHR3i2zxpIchFI7Q
      1WIcjaaWWV5ZP+6FicaSRLqCgM72+jqV+uudlugdGG7aBMqlYuwfnTzat7l8jLQYz4JeZ3V5
      mcqra/LuwRHD/Y3+6YOdTXKl2nHRju4+OgPnP1jLpY7YP0qd8voZGWj1AEuwvb5yXH+2vo97
      dAAJiB/ukcicJK14g11EwuffVNcrRda3XvK680qSTYxOTGBp8UOM7mwSf1W/Yi4T8o5hkiWy
      ySMOYif7YHf7Ge4/fx/USoGNrZ1TXjOjE+MtvcmjveNjJMkmyh1+7GaFUj7N9t5Jr5nZ6mR0
      dLCpd31r5/iEKL/ynjcc4g6bQBKRwVGCHjuVSoVCJkmmWGn5iXLqCEfnADMzM1gUhezeJnkN
      QGFkYgKXRaZSqZCOHZ7pMnwTXyjMcF+YSqVCpVLm6NT4mnNRc1RNfmZmZrBbTZjKR7xMNba1
      b2iMoMdGpVKhmE2QyjdfTsMX6ma4r+vyXnQKZY2ZmRlCLitOW53ljcaPoKt3gJ6Qj0qlQrmU
      J57MNq3FbHcxOTmOqFWoVCocHh5duApMIltiZmaGobAXq8PBwtI6AP6OboYir/ahXOIonmxa
      h8XuZmJyHP3Ye3ihNxpLMzMzw9RoLyaznaWFRQCc3iBjI/3UXh27w6N403sAi93N5MTYKe9R
      07J3fhMc7hsm3AdCKzC/dAR0NS1r9waIza0i8j7yVY2g04XpOKolBsYeMADUi1FWokV6/M0f
      Stk9QZ48aXR/zj2fa72RZjfV9BqbWxVS2TIjYQ/VU+3TcN8I4b5GjsGLlW2g+c2o3RPiyZPQ
      5bzICLXI+uYW2USG4bF+qtrJV+bv6uVJVy9C15hfWG5ZkySbefh+Y3jI1sIcNWjxoBCscp3V
      9Q2quSShgTG02slSRg7vq30Qgrn51vsgy2ZmXnk3L+H12k28WFnDVC9i9fWCOBntaLG5ef9J
      o67F53O0epQhK5Yz3qqA8x4V3nkAxKO7HCYyCKHTFRluWVYXEmZFwuYJ8MHQCBKCk1sGwf72
      Bql8GV3TGHjrSfFZKoU0a1t7ANg9F2Tv6zpmiwmT1cWTJ0PIEmeW5Ikf7HCYzCKETviCfajk
      06xtv/J6L1pBUzTum2Qzjz54glmR8ftPruPZxCE70Tgg8HW0Hgsk9DqrS0vUdNAx03/Btd9s
      NlMWEuMPP8BqUQgH/MfvlfMp1rf3AXB4Wj3LaAxhWFtafuW1MHCB12Qxo1frREYe4LRZEeKk
      frVaZG11Ew1Q7O6WP15dU1lbfuWVmnvvvBfI7XKhazqSYsHrbj2MwGRz8f77j0nvb/Dpz3+J
      fmbzJZwuJ7ouMNmcuG2tY9tqd2GSGjfhPv8Fw5IVC4/ee596/og//4ufoepnn6q7XC50XUeS
      LXg9zqbVAFgdLpRXXv+Fw6FlJh6+h1Mq8+knn5CpaGd6ghwuFwgdgYzfd9FwaAWHw4oQArfP
      13I8DsDg2BRdHjO/+Nkn7CaKyKd6gqx2JyZJIAQXHjtJMuGwN7yeS3jDfSMM9wR4+vlnLG8f
      nukUMZltWMxy4zvz+VquRybJJuyX8N55AKysbfLw8SMejIRZXX3Zsmy9UuDZs+fIdj/f/uiD
      U+mQAIKtl1FmHj1iqMvK6nbztilAencFW/ckMzMP2d1cb72RWo252Vkqwsp3Pv7oTDokwOrm
      NlMzj5gc6WVldaNlVamdFRw9k8zMTLOzudbai87KwiyJQp33P/oYn/1sUO+ur9M38ZCHD8ZY
      X1ltWZPQKiTzdR49eoSWjJK/YPHL7bVFdo+yTD7+Fn2hswP24vtbuMMjzMxMXbgPer1MsqDx
      6NEj1OTBhd7D3Q1Wt6MMjE0zPhA+814xFUW3h5iZmSGxu02ruSd0tUi6qDe8iQMKTcZN3OmT
      YIBcPMpeLEkqmSAWTyGZrPi954+QlE0WurvDVHJJooksoVDwzECto71t4ukMqUSCWCqL1e5o
      NJneelIIQq+xuLhGIZchkUhQqWn4A8G3Bn4BICl0hbsRtQIvD2J0doTOnBHz8QN2jpKkUyni
      sTiy2Y7NYmrirbK4tH45LxDsDGOVNXZe7uENdWI51W1aKaTY2D4gk0kRT8Spo+CwW7Gf4wXB
      xvIS2XyBeCJJoVzC6fZhNZ//DMQX6MBjN7G7s4PFFcBhPbViZ63E8toWuWyGZDxBWRW4nA7s
      9vO96ytL5PIFEokkhXIZp6e51+XxE/Q6OdjdQTfZcZ9ObBIqS0ur5PNZEokEpWIVu9uF037e
      IErB+vIyuXy+sb+lMq5zvHc+LUqtnGdpdQMkM+OTE9jMyrmJ8PVakWfP5hsDyioqv/3xh2+U
      ExQyCTZe7iObHEw9GEOWIJvNnpt5JXSN9eVFijWd3oERQj4nIL3dV6ypPHv2DKGYSebK/OB7
      33mrXLWUY2VtCyEpTDyYwmqSWnjrrC0vUarp9A6OEPI28aKz+PwZFU2ikMny/u/8Hi7T2UkC
      tFqZ5ZVVVF1ieGwSt93c3CsER3tbHCZzuANdDPc1zq7nHevNlXnSBZVqKc/QzLcJe61nyuma
      yvrKCuWaRu/gKEGvo6X3cHeLo1QOT6CLoRbeg5dr7MdzSGoZX/8DRnoCZ8oJofNyfYVMqUZH
      dx89Hf4LvJscpfJ4gl0MRc733nkTaHV1namHj5ke72V9bafpVBaybMbv8yDLEpVS4dzJlza2
      9nj46DGjvTZWt5Mtp8XI7q1i6hjh8eMZ9rbXXy3ofU5BSSYQ8KHIMlqtTK5YeWtY7dr6JhPT
      M0yPDzQGu7Wat2dvDUvnaMO71cKLhD8QwKQo6FqNbO7Niapgd32N7tFpHj2cYHNtraVXaFWO
      0hUev/ceejpKQZealn899keIOpnM292ryYNt7B0DPHr8kN3t1l69XiGWrfL4vffQ0lGKLbwu
      jxebxQwIspnMW12XpdQhVbOfx48ekdzbQWvlVcvEcyqP33uPeqq59857gS6bESabLIxOTCGE
      oFTIEYtG6R8cOHNz804ywmSFgeFx+oVgolxk//AQp30A06mmyLvJCJPo7huiOyKo1cY5PIhS
      cjtwnhri8a4ywoJdEYJdvdTVRjJOplA9M+vau8oI8/g7mfF3otVVUokY8VTuzIPR37iMMKFr
      ZLNZLHbXyai/a06EpGsqmWwOp9uLxXTSjDo/U0lQzOeoo+BxOW/kFUIjk85idbzaB6mxRntr
      rwmPy3FDryCfzSBbbDjtNl43o5rNlFarlCiUa3i93kY37g28xUIO7Y19eNdeEJSLBSp1cTzx
      QDu8d9oE2t9c5iCeYWH2OXWaXxovw8rCHOlcnudzLxAX1FPLxZlfecne5gpH6dKNvDtrSxyl
      sizMzVEXLZOdqOZizK/usLuxxFHmZt7swQZr+wmW5ucpqfoF42sEz589I5s6ZHm9eTPzMqiF
      OHPL2+ysLhAv1C6oS2f22TOyyUOW13dv5NXUMs/nFknsb7B5kLmUN5OMsrKx13rmwWtvURso
      VXVGRobp8tooX9A9dhF1ycLI4CBus9zyCSFAKZcnMjzC8ECEQuHttvVVyNUEk6NDBLw21Hrr
      i2kpe+ItFoo38maSZcanxugL+iipFx08FbsryNDIKKJ6M2+1kKZ7eJKJoTCpfOuhK1DH4Qoy
      NDqKqN7sOGtaCX+wn7EHo5RaDPtooOJwhRgeHUOv5FuWvNNuUFnS2NzcoqpDJnGELlvPdntd
      AVErsflyFx2IHx1htnuwW81NElPM7G9vkswWUStFssVai8SU1pips7axjaoJUokYQrHhctjO
      9ZosZva2NknliqiVAtnSDbxWhc21dYpqnUI6SUWTWibE5FJHjZkt0InFkvhbJKa0QjZZ2N/e
      IJGropWy5EoqQb+nqTebPGK/DV5JUohHd4jGMkCVZKZAIBSgdq5XJps8ZD8ab3jjKfxNEmLu
      vBv0XdNq9mDDa3jvvBv0NZV8grXtVgnW7wqNhfnFe+SFjcV5Sjdscl7b2zyT/Z2xvjhPuYn3
      zrtBa9UypXIVMNHhN1PXdUyXSoq5Gbqmkss32sORvh4qNfVVH/RvpleIVz1QuiDY04deLSNM
      9pY37e3yFvI5tNfeShnhvF1vqKcPrVpGON723nkALL9YwBvsRKvk2EuUcbvdvP+o+cwK7SK7
      t8pGyUGHQ2JzcwuXw83jjz5smazRDjJ7q2yVHIROed/76MML58y8KUKrMDf/gt5IL3tbm9i9
      HnoGHxxner0r9HqZhYVFenp7Gl6Pm97hKbp879irllhYWKKnt5vdrU0cHjeRkWk6vWeHTdx5
      E8hpNSHZ3HjcTvyhMIq4ncW1bS4Pel0jFPBhc/rwOsxot7Copc3pPvbaXbfnlSQTsgyhjg6s
      ZgvdXSGq1drFH7ypVzYhSSfecFeI6iWXULqZ13zG29UZPNd75zfBtWqFVPyImmynr7sDVa1j
      aWOToNlNklZXyWXTJNJFBocGEFods8XStkvzhd5MiaHBfvRb8gqhUyrkOYgeEY4MYDdLyCbz
      8fQut+Ht7hvEZuIWvTkOorGW3ju/AhSzSQ4TaQrZNLlipa0//lZotTJ7+1HK5SKJZAZLG3+E
      l/KWisRTt+dFCA72dimWy8RjcSSTpW0/wtZenYO9XUrlMrFY7Ha9u3sXeu88ALzBTpxWE8VC
      hnT2Zg9LroLZ7ibkc1NXqxxemJv7LryVW/VKskw43IUkdGKHB7RImW6zVyEc7gKhE4tG35rr
      5116u8KdF3rv/CY4cRSla2CMYYuEeotdZJV8Gs3q4/33BilVmieyt9+bQrfdvlfodRKZEg8f
      vUetUsJ8S6c+/Q2v6ba8mkoyW7nQe6dXAF2vU9d0Nl485RefP6VQfvc3ZUBj5uCaSja+y08+
      /Snx1EWP1tvprZOJvfbmLv5Mm6iWy6jVEj//9Cds7EQvnJ3hXXg3b91b4Gef/oTN3ebeOw2A
      7eXnvNg4YGBokJ7IICFf67ny20Upc8hnnz8l0N1PV2cXg5HwxR9qhzcd5bNfPSXY3U9XZ5jB
      SPMZMNpLnc9++imqydlY4ml89JbOxHU++/RT6iYX4Vv2/uVPf0rd7Cbc2cnEWHPv3Q6HFgK9
      XmV1aYlsWaV/aIyeTn+TWq7Hub0EQiAQ7G2vs3eYxN/Rw+TowO17O3uYHLkFL41jnUlEWd14
      icXuZnrmYcvF6t6F12p3M3WL3nQ8ytrmS6wON1MPz/feeTfoacQFq6Bfh8uMFbmP3vPTMO+f
      985vgk/T7h+D4TW8F3nvvBvUwOAuMQLA4F5jBIDBveb/BxviNL/VfQcJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Population Data Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Dual Enrollees' width='192'>
      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
      m9iyWDbz/wHTA4sUV0Wq1gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
